version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: audiarr-postgres
    environment:
      POSTGRES_USER: audiarr
      POSTGRES_PASSWORD: audiarr_pass
      POSTGRES_DB: audiarr
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  audiarr-api:
    build: ./backend
    container_name: audiarr-api
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__Default: Host=postgres;Database=audiarr;Username=audiarr;Password=audiarr_pass
      Jwt__Key: SuperSecretKeyChangeThis
      Integrations__ProwlarrUrl: http://prowlarr:9789
      Integrations__ProwlarrApiKey: your-prowlarr-api-key
      # These point to your desktop apps by default (host.docker.internal works on Docker Desktop)
      Integrations__PlexUrl: http://host.docker.internal:32400
      Integrations__AudiobookshelfUrl: http://host.docker.internal:13378
    depends_on:
      - postgres
      - prowlarr
    ports:
      - "5080:80"     # Backend API available at http://localhost:5080
    volumes:
      - ./data/audiobooks:/data/audiobooks
      - ./data/config:/app/config
    restart: unless-stopped

  audiarr-web:
    build: ./frontend
    container_name: audiarr-web
    environment:
      - VITE_API_URL=http://localhost:5080
    ports:
      - "3080:3000"   # Frontend available at http://localhost:3080
    depends_on:
      - audiarr-api
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./data/prowlarr:/config
    ports:
      - "9789:9696"   # Prowlarr available at http://localhost:9789
    restart: unless-stopped

  adminer:
    image: adminer
    container_name: audiarr-adminer
    ports:
      - "8088:8080"   # Adminer available at http://localhost:8088
    restart: unless-stopped

# Optional download client containers (uncomment if you want to run them inside Docker)
#  deluge:
#    image: linuxserver/deluge
#    container_name: deluge
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=UTC
#      - DELUGE_LOGLEVEL=info
#    volumes:
#      - ./data/deluge:/config
#      - ./data/downloads:/downloads
#    ports:
#      - 8112:8112
#    restart: unless-stopped
#
#  nzbget:
#    image: linuxserver/nzbget
#    container_name: nzbget
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=UTC
#      - NZBGET_USER=nzbget
#      - NZBGET_PASS=tegbzn6789
#    volumes:
#      - ./data/nzbget:/config
#      - ./data/downloads:/downloads
#    ports:
#      - 6789:6789
#    restart: unless-stopped

volumes:
  pgdata:
